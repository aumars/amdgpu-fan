create_venv: &create_venv
  name: create virtualenv
  command: |
    python -m venv venv


chmod_usr_share: &chmod_usr_share
  name: chmod usr share to be world read/write/exec
  command: |
    sudo chmod a+rwx /usr/share

install_project: &install_project
  name: install project in venv
  command: |
    . venv/bin/activate
    pip install /tmp/workspace/amdgpu_fan-*tar.gz

test_project: &test_project
  name: run tests
  command: |
    . venv/bin/activate
    pip install pytest
    cd tests
    python3 -m pytest

init_pypirc: &init_pypirc
  name: init .pypirc
  command: |
    echo -e "[pypi]" >> ~/.pypirc
    echo -e "username = chestm007" >> ~/.pypirc
    echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

package_and_upload: &package_and_upload
  name: package and upload
  command: |
    sudo pip install twine
    twine upload /tmp/workspace/amdgpu_fan-*.tar.gz

build_artifact: &build_artifact
  name: build artifact
  command: |
    sed -i "s/PROJECTVERSION/`python get_build_version.py`/g" setup.py
    python setup.py sdist

test_steps: &test_steps
  steps:
    - attach_workspace:
        at: /tmp/workspace
    - checkout
    - run:
        <<: *create_venv
    - run:
        <<: *chmod_usr_share
    - run:
        <<: *install_project
    - run:
        <<: *test_project

version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          <<: *build_artifact
      - persist_to_workspace:
          root: dist
          paths: amdgpu_fan-*.tar.gz

  python3.6:
    docker:
      - image: circleci/python:3.6.8-stretch
    working_directory: ~/repo
    <<: *test_steps
  python3.7:
    docker:
      - image: circleci/python:3.7.3-stretch
    working_directory: ~/repo
    <<: *test_steps

  deploy:
    docker:
      - image: circleci/python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          <<: *init_pypirc
      - run:
          <<: *package_and_upload

  update_downstream_aur_package:
    docker:
      - image: circleci/python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: load ssh key
          command: |
            echo $AURCI_SSH_KEY | sed 's/::::/\n/g' > /tmp/aurkey
            chmod 0700 /tmp/aurkey
      - run:
          name: deploy to aur
          command: |
            cd distro/arch
            sed -i "s/^pkgver=\d+.\d+.\d+$/pkgver=$CIRCLE_TAG/g" PKGBUILD
            . deploy.sh



workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - python3.6:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - python3.7:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - python3.6
            - python3.7
          filters:
            tags:
              only: /.*/
      - update_downstream_aur_package:
          requires:
            - deploy
          filters:  # release only on tagged builds, ignore all else
            tags:
              only: /^\d+.\d+.\d+$/

